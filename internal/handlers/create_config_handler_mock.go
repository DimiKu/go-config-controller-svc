// Code generated by MockGen. DO NOT EDIT.
// Source: ./create_config_handler.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	entities "go-config-controller-svc/internal/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockServerService is a mock of ServerService interface.
type MockServerService struct {
	ctrl     *gomock.Controller
	recorder *MockServerServiceMockRecorder
}

// MockServerServiceMockRecorder is the mock recorder for MockServerService.
type MockServerServiceMockRecorder struct {
	mock *MockServerService
}

// NewMockServerService creates a new mock instance.
func NewMockServerService(ctrl *gomock.Controller) *MockServerService {
	mock := &MockServerService{ctrl: ctrl}
	mock.recorder = &MockServerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerService) EXPECT() *MockServerServiceMockRecorder {
	return m.recorder
}

// CreateConfig mocks base method.
func (m *MockServerService) CreateConfig(ctx context.Context, config entities.ServerConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConfig", ctx, config)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateConfig indicates an expected call of CreateConfig.
func (mr *MockServerServiceMockRecorder) CreateConfig(ctx, config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConfig", reflect.TypeOf((*MockServerService)(nil).CreateConfig), ctx, config)
}

// DeleteConfig mocks base method.
func (m *MockServerService) DeleteConfig(ctx context.Context, config entities.ServerConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteConfig", ctx, config)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteConfig indicates an expected call of DeleteConfig.
func (mr *MockServerServiceMockRecorder) DeleteConfig(ctx, config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConfig", reflect.TypeOf((*MockServerService)(nil).DeleteConfig), ctx, config)
}

// GetConfigsList mocks base method.
func (m *MockServerService) GetConfigsList(ctx context.Context) ([]entities.ServerConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigsList", ctx)
	ret0, _ := ret[0].([]entities.ServerConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigsList indicates an expected call of GetConfigsList.
func (mr *MockServerServiceMockRecorder) GetConfigsList(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigsList", reflect.TypeOf((*MockServerService)(nil).GetConfigsList), ctx)
}
